{"version":3,"sources":["helper.js"],"names":["String","prototype","trimEnd","c","this","replace","RegExp","escapeRegExp","trimStart","getUrlEncodedKey","key","query","window","location","search","matches","exec","length","decodeURIComponent","setUrlEncodedKey","value","q","re","test","encodeURIComponent"],"mappings":"AAAAA,OAAOC,UAAUC,QAAU,SAASC,GAChC,OAAIA,EACOC,KAAKC,QAAQ,IAAIC,OAAOH,EAAEI,eAAiB,MAAO,IACtDH,KAAKC,QAAQ,OAAQ,KAEhCL,OAAOC,UAAUO,UAAY,SAASL,GAClC,OAAIA,EACOC,KAAKC,QAAQ,IAAIC,OAAO,IAAMH,EAAEI,eAAiB,KAAM,IAC3DH,KAAKC,QAAQ,OAAQ,KAGhCL,OAAOC,UAAUM,aAAe,WAC5B,OAAOH,KAAKC,QAAQ,wBAAyB,SAGjDI,iBAAmB,SAASC,EAAKC,GACxBA,IACDA,EAAQC,OAAOC,SAASC,QAC5B,IACIC,EADK,IAAIT,OAAO,QAAUI,EAAM,WACnBM,KAAKL,EAAQ,KAC9B,OAAKI,GAAWA,EAAQE,OAAS,EACtB,GACJC,mBAAmBH,EAAQ,GAAGV,QAAQ,IAAK,OAEtDc,iBAAmB,SAAST,EAAKU,EAAOT,GAGpC,IAAIU,GADJV,EAAQA,GAASC,OAAOC,SAASC,QACjB,IACZQ,EAAK,IAAIhB,OAAO,QAAUI,EAAM,SAMpC,OALKY,EAAGC,KAAKF,GAGTA,EAAIA,EAAEhB,QAAQiB,EAAI,IAAMZ,EAAM,IAAMc,mBAAmBJ,GAAS,KAFhEC,GAAKX,EAAM,IAAMc,mBAAmBJ,GAI1B,MADdC,EAAIA,EAAEb,UAAU,KAAKN,QAAQ,MACnB,GAAUmB,EAAIA,EAAI,IAAMA","file":"helper.min.js","sourcesContent":["String.prototype.trimEnd = function(c) {\n    if (c)\n        return this.replace(new RegExp(c.escapeRegExp() + \"*$\"), '');\n    return this.replace(/\\s+$/, '');\n};\nString.prototype.trimStart = function(c) {\n    if (c)\n        return this.replace(new RegExp(\"^\" + c.escapeRegExp() + \"*\"), '');\n    return this.replace(/^\\s+/, '');\n};\n\nString.prototype.escapeRegExp = function() {\n    return this.replace(/[.*+?^${}()|[\\]\\/\\\\]/g, \"\\\\$0\");\n};\n\ngetUrlEncodedKey = function(key, query) {\n    if (!query)\n        query = window.location.search;\n    var re = new RegExp(\"[?|&]\" + key + \"=(.*?)&\");\n    var matches = re.exec(query + \"&\");\n    if (!matches || matches.length < 2)\n        return \"\";\n    return decodeURIComponent(matches[1].replace(\"+\", \" \"));\n};\nsetUrlEncodedKey = function(key, value, query) {\n\n    query = query || window.location.search;\n    var q = query + \"&\";\n    var re = new RegExp(\"[?|&]\" + key + \"=.*?&\");\n    if (!re.test(q))\n        q += key + \"=\" + encodeURIComponent(value);\n    else\n        q = q.replace(re, \"&\" + key + \"=\" + encodeURIComponent(value) + \"&\");\n    q = q.trimStart(\"&\").trimEnd(\"&\");\n    return (q[0]==\"?\" ? q : q = \"?\" + q);\n};"]}