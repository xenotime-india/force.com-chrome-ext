{"version":3,"sources":["app.js"],"names":["apiVersion","requestMetadata","requestSqlData","type","table","soqlFields","soqlWhere","apiFieldIndex","fields","__getCookie","i","x","y","ARRcookies","document","cookie","c_name","split","length","sforce","filterBy","substr","indexOf","filterByMetadata","replace","serverUrl","getServerURL","window","location","url","sessionId","arr","changefilterMode","newmode","newmode1","blobToBase64","FileReader","cb","base64","href","reader","readAsDataURL","blob","jQuery","append","onload","tdgroup","item","result","addRow","data","forEach","isDate","showDate","moment","Date","fromNow","valueOf","theDate","Name","day","getDate","month","value","val","d","createPanel","panel","today","getFullYear","topPanel","createTable","tab","attr","title","find","dataTbl","tableId","dataTable","nNodes","each","selectAll","check","obj","fnGetNodes","globalUnSelectAll","is","this","addClass","removeClass","index","results","metadata","checkStatus","maketypeblock","table_data","XMLString","current","id","callback","name","DataTable","rows","returnData","members","makeobjectToRetrive","getPackage","showLoading","resourceType","push","retrieve","complete","hideLoading","deploy","unpackaged","types","loginUser","err","zipFile","fileName","fileObj","fetch","method","body","bigTestBlob","Blob","File","FormData","formData","then","success","error","childXmlNames","childXmlName","updateData","setTimeout","workWithSOQL","html","userDate","workWithSessionStorageMetaData","catch","query","all","records","requestPromises","map","Promise","order","iDisplayLength","hasClass","reject","on","toggleClass","parse","hasRecord","manageableState","JSON","sessionStorage","getItem","workWithMetaData","resolve","show","year","getMonth","hide","toLowerCase","add","xmlName","filter","sort","a","b","datepicker"],"mappings":"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","file":"app.min.js","sourcesContent":["const apiVersion = '41.0';\nlet requestMetadata = [];\n\nconst requestSqlData = [\n    {\n        type:'ApexClass',\n        table: 'ApexClass_tb',\n        soqlFields: 'Id, Name, LastModifiedDate, LastModifiedBy.Name, CreatedBy.Name, CreatedDate',\n        soqlWhere: 'NamespacePrefix = null',\n        fields: [ 'Select','Id', 'Name', 'LastModifiedDate', 'LastModifiedBy',\n            'CreatedDate','CreatedBy' ],\n        apiFieldIndex: 2,\n    }, {\n        type:'ApexPage',\n        table: 'ApexPage_tb',\n        soqlFields: 'Id, Name, LastModifiedDate, LastModifiedBy.Name, CreatedBy.Name, CreatedDate',\n        soqlWhere: 'NamespacePrefix = null',\n        fields: [ 'Select','Id', 'Name', 'LastModifiedDate', 'LastModifiedBy',\n            'CreatedDate','CreatedBy' ],\n        apiFieldIndex: 2,\n    }, {\n        type:'ApexTrigger',\n        table: 'ApexTrigger_tb',\n        soqlFields: 'Id, Name, LastModifiedDate, LastModifiedBy.Name, CreatedBy.Name, CreatedDate',\n        soqlWhere: 'NamespacePrefix = null',\n        fields: [ 'Select','Id', 'Name', 'LastModifiedDate', 'LastModifiedBy',\n            'CreatedDate','CreatedBy' ],\n        apiFieldIndex: 2,\n    }, {\n        type:'ApexComponent',\n        table: 'ApexComponent_tb',\n        soqlFields: 'Id, Name, LastModifiedDate, LastModifiedBy.Name, CreatedBy.Name, CreatedDate',\n        soqlWhere: 'NamespacePrefix = null',\n        fields: [ 'Select','Id', 'Name', 'LastModifiedDate', 'LastModifiedBy',\n            'CreatedDate','CreatedBy' ],\n        apiFieldIndex: 2,\n    }, {\n        type:'StaticResource',\n        table: 'StaticResource_tb',\n        soqlFields: 'Id, Name, LastModifiedDate, LastModifiedBy.Name, CreatedBy.Name, CreatedDate',\n        soqlWhere: 'NamespacePrefix = null',\n        fields: [ 'Select','Id', 'Name', 'LastModifiedDate', 'LastModifiedBy',\n            'CreatedDate','CreatedBy' ],\n        apiFieldIndex: 2,\n    }, {\n        type:'WebLink',\n        table: 'WebLink_tb',\n        soqlFields: 'Id, Name, LastModifiedDate, LastModifiedBy.Name, CreatedBy.Name, CreatedDate, PageOrSobjectType',\n        soqlWhere: 'NamespacePrefix = null',\n        fields: ['Select','Id', 'Name', 'PageOrSobjectType', 'LastModifiedDate', 'LastModifiedBy',\n            'CreatedDate','CreatedBy'],\n        apiFieldIndex: [3,2],\n    }, {\n        type:'Dashboard',\n        table: 'Dashboard_tb',\n        soqlFields: 'Id, Title, LastModifiedDate, LastModifiedBy.Name, CreatedBy.Name, CreatedDate',\n        soqlWhere: 'NamespacePrefix = null',\n        fields: [ 'Select','Id', 'Title', 'LastModifiedDate', 'LastModifiedBy',\n            'CreatedDate','CreatedBy' ],\n        apiFieldIndex: 2,\n    }, {\n        type:'Report',\n        table: 'Report_tb',\n        soqlFields: 'Id, Name, DeveloperName,LastModifiedDate, LastModifiedBy.Name, CreatedBy.Name, CreatedDate',\n        soqlWhere: 'NamespacePrefix = null',\n        fields: [ 'Select','Id', 'Name','DeveloperName','LastModifiedDate', 'LastModifiedBy',\n            'CreatedDate','CreatedBy' ],\n        apiFieldIndex: 3,\n    }, {\n        type:'RecordType',\n        table: 'RecordType_tb',\n        soqlFields: 'Id, SobjectType, Name, LastModifiedDate, LastModifiedBy.Name, CreatedBy.Name, CreatedDate, DeveloperName',\n        soqlWhere: 'NamespacePrefix = null',\n        fields: [ 'Select','Id', 'SobjectType' ,'Name','DeveloperName','LastModifiedDate', 'LastModifiedBy',\n            'CreatedDate','CreatedBy' ],\n        apiFieldIndex: [2,4],\n    }, {\n        type:'ActionLinkGroupTemplate',\n        table: 'ActionLinkGroupTemplate_tb',\n        soqlFields: 'Id, MasterLabel, DeveloperName, LastModifiedDate, LastModifiedBy.Name, CreatedBy.Name, CreatedDate',\n        soqlWhere: 'Id != null',\n        fields: [ 'Select','Id', 'MasterLabel', 'DeveloperName', 'LastModifiedDate', 'LastModifiedBy',\n            'CreatedDate','CreatedBy' ],\n        apiFieldIndex: 3,\n    }];\n\nfunction __getCookie(c_name){\n    let i;\n    let x;\n    let y;\n    const ARRcookies=document.cookie.split(\";\");\n    for (i=0;i<ARRcookies.length;i++){\n        x=ARRcookies[i].substr(0,ARRcookies[i].indexOf(\"=\"));\n        y=ARRcookies[i].substr(ARRcookies[i].indexOf(\"=\")+1);\n        x=x.replace(/^\\s+|\\s+$/g,\"\");\n        if (x==c_name){\n            return unescape(y);\n        }\n    }\n}\n\nlet filterBy = 'LastModifiedDate';\nlet filterByMetadata = 'lastModifiedDate';\n\n\nconst sforce = new jsforce.Connection({\n    serverUrl : getServerURL(),\n    sessionId : __getCookie('sid')\n});\nfunction changefilterMode(newmode,newmode1) {\n    filterBy = newmode;\n    filterByMetadata = newmode1;\n}\n\nfunction getServerURL() {\n    const url = window.location.href;\n    const arr = url.split(\"/\");\n    return `${arr[0]}//${arr[2]}`;\n}\n\nconst blobToBase64 = (blob, cb) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n        const dataUrl = reader.result;\n        const base64 = dataUrl.split(',')[1];\n        cb(base64);\n    };\n    reader.readAsDataURL(blob);\n};\n\nfunction addRow(data, fields, table) {\n    jQuery(table).append('<tr/>');\n\n    const tdgroup = fields.map(item => {\n        if(item == 'Select') {\n            return jQuery('<td><i class=\"fa fa-square-o\"></i></td>');\n        }\n        else if(data[item] == 'null' || data[item] == null) {\n            return jQuery('<td></td>');\n        }\n        else if(isDate(data[item])) {\n            return jQuery(`<td>${showDate(data[item])}<br/>(${moment(new Date(data[item])).fromNow()})</td>`);\n        }\n        else if(typeof(data[item]) == 'string') {\n            return jQuery(`<td>${data[item]}</td>`);\n        }\n        else {\n            return jQuery(`<td>${data[item].Name}</td>`);\n        }\n        return jQuery('<td></td>');\n    });\n    tdgroup.forEach(value => {\n        jQuery(table).find('tr:last').append(value);\n    });\n}\nfunction isDate(val) {\n    const d = new Date(val);\n    return !isNaN(d.valueOf());\n}\n\nfunction showDate(theDate) {\n    const newDate = new Date(theDate);\n    const today = newDate;\n    const year = today.getFullYear();\n    let month = today.getMonth() + 1;\n    let day = today.getDate();\n    if (month < 10)\n        month = `0${month}`;\n    if (day < 10)\n        day = `0${day}`;\n    return `${year}-${month}-${day}`;\n}\n\nfunction createPanel(title,table,tab) {\n    jQuery(tab).append(`<li><a href=\"#${jQuery(table).attr('Id')}-tab\" role=\"tab\" data-toggle=\"tab\">${title}</a></li>`)\n    const topPanel = jQuery(`<div class=\"tab-pane\" id=\"${jQuery(table).attr('Id')}-tab\"/>`);\n    const panel = jQuery('<div class=\"panel panel-default\"/>');\n    jQuery(panel).append(`<div class=\"panel-heading\"> ${title}</div>`);\n    jQuery(panel).append('<div class=\"panel-body\"></div>');\n    jQuery(panel).find('.panel-body').append(jQuery(table));\n    jQuery(topPanel).append(jQuery(panel));\n    return jQuery(topPanel);\n}\n\nfunction createTable(fields,tableId) {\n    const table = jQuery(`<table id=\"${tableId}\" cellpadding=\"0\" border=\"0\" class=\"table table-striped table-bordered\" cellspacing=\"0\" width=\"100%\"></table>`);\n    jQuery(table).append('<thead></thead>');\n    jQuery(table).append('<tbody></tbody>');\n    jQuery(table).find('thead').append('<tr/>');\n    for (i = 0; i < fields.length; i++) {\n        if(fields[i] == 'Select') {\n            jQuery(table).find('tr:last').append(\n                `<td><input type=\"checkbox\" onclick=\"selectAll(this,'${tableId}','')\"/></td>`);\n        }\n        else {\n            jQuery(table).find('thead>tr').append(`<th>${fields[i]}</th>`);\n        }\n    }\n    return jQuery(table);\n}\n\nfunction selectAll(check,table,obj) {\n    let dataTbl;\n    if(table != '') {\n        dataTbl = jQuery(`#${table}`).dataTable();\n    }\n    else {\n        dataTbl = jQuery(obj).dataTable();\n    }\n    const nNodes = dataTbl.fnGetNodes();\n    jQuery(nNodes).each(function() {\n        if(check == '' || jQuery(check).is(':checked')) {\n            jQuery(this).addClass('selected');\n            jQuery(this).find('i.fa').removeClass('fa-square-o').addClass('fa-check-square-o');\n        }\n        else {\n            jQuery(this).removeClass('selected');\n            jQuery(this).find('i.fa').removeClass('fa-check-square-o').addClass('fa-square-o');\n        }\n    });\n}\n\nfunction globalSelectAll() {\n    requestMetadata.forEach((val, index) => {\n        selectAll('','',jQuery(`#${val.table}`));\n    });\n    requestSqlData.forEach((val, index) => {\n        selectAll('','',jQuery(`#${val.table}`));\n    });\n}\n\nfunction globalUnSelectAll() {\n    requestMetadata.forEach((val, index) => {\n        selectAll(' ','',jQuery(`#${val.table}`));\n    });\n    requestSqlData.forEach((val, index) => {\n        selectAll(' ','',jQuery(`#${val.table}`));\n    });\n}\n\nfunction waitForDone(callback) {\n    function getResult(id) {\n        sforce.metadata.checkRetrieveStatus(id, callback);\n    }\n    function check(results) {\n        const done = results[0].getBoolean(\"done\");\n        if (!done) {\n            sforce.metadata.checkStatus([results[0].id], check);\n        } else {\n            getResult(results[0].id);\n        }\n    }\n    return result => {\n        check([result]);\n    };\n}\nfunction maketypeblock(table_data,index,name) {\n    let XMLString = '';\n    if(jQuery(table_data).DataTable().rows('.selected').data().length > 0) {\n        XMLString += '\\n    <types>';\n        jQuery(jQuery(table_data).DataTable().rows('.selected').data()).each(function() {\n            const current = jQuery(this);\n            XMLString += '\\n        <members>';\n            if(typeof(index) == 'number') {\n                if(jQuery(this)[index] != '' && jQuery(this)[index] != 'null' && jQuery(this)[index] != null) {\n                    XMLString += jQuery(this)[index];\n                }\n            }\n            else {\n                for(i = 0 ; i < index.length ; i++) {\n                    if(jQuery(this)[index[i]] != '' && jQuery(this)[index[i]] != 'null' && jQuery(this)[index[i]] != null) {\n                        if(i != index.length - 1) {\n                            XMLString += `${jQuery(this)[index[i]]}.`;\n                        }\n                        else {\n                            XMLString += jQuery(this)[index[i]];\n                        }\n                    }\n                }\n            }\n            XMLString += '</members>';\n        });\n        XMLString += ` \\n       <name>${name}</name>`;\n        XMLString += ' \\n   </types>';\n    }\n\n    return XMLString;\n}\nfunction makeobjectToRetrive(table_data, index, type) {\n    let returnData;\n    if(jQuery(table_data).DataTable().rows('.selected').data().length > 0) {\n        returnData = {name:type,members:[]};\n        jQuery(jQuery(table_data).DataTable().rows('.selected').data()).each(function() {\n            if(typeof(index) == 'number') {\n                if(jQuery(this)[index] != '' && jQuery(this)[index] != 'null' && jQuery(this)[index] != null) {\n                    returnData.members.push(jQuery(this)[index]);\n                }\n            }\n            else {\n                for(i = 0 ; i < index.length ; i++) {\n                    let XMLString = '';\n                    if(jQuery(this)[index[i]] != '' && jQuery(this)[index[i]] != 'null' && jQuery(this)[index[i]] != null) {\n                        if(i != index.length - 1) {\n                            XMLString += `${jQuery(this)[index[i]]}.`;\n                        }\n                        else {\n                            XMLString += jQuery(this)[index[i]];\n                        }\n                    }\n                    returnData.members.push(XMLString);\n                }\n            }\n        });\n    }\n    return returnData;\n}\nfunction getPackage() {\n    showLoading();\n    const resourceType = [];\n\n    requestMetadata.forEach((val, index) => {\n        const result = makeobjectToRetrive(jQuery(`#${val.table}`),val.apiFieldIndex,val.type);\n        if(typeof(result) != 'undefined') {\n            resourceType.push(result);\n        }\n    });\n    requestSqlData.forEach((val, index) => {\n        const result = makeobjectToRetrive(jQuery(`#${val.table}`),val.apiFieldIndex,val.type);\n        if(typeof(result) != 'undefined') {\n            resourceType.push(result);\n        }\n    });\n    if(resourceType.length > 0) {\n        sforce.metadata.retrieve({\n            unpackaged: {\n                types: resourceType,\n                version: apiVersion\n            }\n        }).complete((err, value) => {\n            if (err) { void 0; }\n            void 0;\n            location.href=`data:application/zip;base64,${value.zipFile}`;\n            hideLoading();\n        });\n    }\n    else {\n        void 0;\n        hideLoading();\n    }\n}\nfunction deploy() {\n    /*\n    jQuery('#loginDialog').modal({\n        backdrop: 'static',\n        keyboard: true\n    });\n    */\n}\n\nfunction loginUser() {\n    const resourceType = [];\n\n    requestMetadata.forEach((val, index) => {\n        const result = makeobjectToRetrive(jQuery(`#${val.table}`),val.apiFieldIndex,val.type);\n        if(typeof(result) != 'undefined') {\n            resourceType.push(result);\n        }\n    });\n    requestSqlData.forEach((val, index) => {\n        const result = makeobjectToRetrive(jQuery(`#${val.table}`),val.apiFieldIndex,val.type);\n        if(typeof(result) != 'undefined') {\n            resourceType.push(result);\n        }\n    });\n\n    const requestObj = sforce.metadata.retrieve({\n        unpackaged: {\n            types: resourceType,\n            version: apiVersion\n        }\n    });\n\n    const fileName = 'package.zip';\n\n    requestObj.complete((err, value) => {\n        if (err) { void 0; }\n        void 0;\n        const bigTestBlob = new Blob([value.zipFile], { type: \"application/zip\" });\n        blobToBase64(bigTestBlob, x => {\n            //console.log(value.zipFile);\n            //location.href=\"data:application/zip;base64,\" + value.zipFile;\n            const fileObj = new File([x], fileName, { type: 'application/zip'});\n            void 0;\n\n            const formData = new FormData();\n            formData.append('file', fileObj);\n\n            fetch('http://localhost:3000/upload', { // Your POST endpoint\n                method: 'POST',\n                body: formData\n            }).then(\n                response => response.json() // if the response is a JSON object\n            ).then(\n                success => void 0 // Handle the success response object\n            ).catch(\n                error => void 0 // Handle the error response object\n            );\n        });\n\n    });\n}\n\nfunction generateXml() {\n    let XMLString = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    XMLString += '\\n<Package xmlns=\"http://soap.sforce.com/2006/04/metadata\">'\n\n    requestMetadata.forEach((val, index) => {\n        XMLString += maketypeblock(jQuery(`#${val.table}`),val.apiFieldIndex,val.type);\n    });\n    requestSqlData.forEach((val, index) => {\n        XMLString += maketypeblock(jQuery(`#${val.table}`),val.apiFieldIndex,val.type);\n    });\n\n    XMLString += `\\n    <version>${apiVersion}</version>\\n</Package>`;\n    jQuery('#xmlData').val(XMLString);\n    jQuery('#xmlDialog').modal();\n}\n\njQuery(() => {\n    showLoading();\n\n    jQuery('#dateField').val(showDate(new Date().add(-1).month()));\n    void 0;\n    sforce.metadata.describe(apiVersion).then(metadata => {\n        metadata.metadataObjects.forEach(value => {\n            if(value.childXmlNames) {\n                value.childXmlNames.forEach(childXmlName => {\n                    const result = requestSqlData.filter(item => item.type.toLowerCase() === childXmlName.toLowerCase());\n                    if(result.length == 0) {\n                        requestMetadata.push({\n                            type: childXmlName,\n                            table: `${childXmlName}_tb`,\n                            apiFieldIndex: 2,\n                        });\n                    }\n                });\n            }\n            const result = requestSqlData.filter(item => item.type.toLowerCase() === value.xmlName.toLowerCase());\n            if(result.length == 0) {\n                requestMetadata.push({\n                    type: value.xmlName,\n                    table: `${value.xmlName}_tb`,\n                    apiFieldIndex: 2,\n                });\n            }\n        });\n        requestMetadata = requestMetadata.sort((a, b) => {\n            if (a.type < b.type) {\n                return -1;\n            }\n            if (a.type > b.type) {\n                return 1;\n            }\n            return 0;\n        });\n        return workWithSOQL();\n    })\n        .then(() => workWithMetaData()).then(() => {\n        jQuery(`#myTab a[href=\"#${requestSqlData[0].type}_tb-tab\"]`).tab('show');\n        hideLoading();\n    }).catch(err => {\n        void 0;\n    });\n    jQuery('#dateField').datepicker({\n        format: 'yyyy-mm-dd'\n    });\n});\n\nfunction updateData() {\n    showLoading();\n    setTimeout(() => {\n\n        jQuery('#container').html('');\n        jQuery('#container-tab2').html('');\n        jQuery('#container-tab').html('');\n        workWithSOQL().then(() => workWithSessionStorageMetaData()).then(() => {\n            jQuery(`#myTab a[href=\"#${requestSqlData[0].type}_tb-tab\"]`).tab('show');\n            hideLoading();\n        }).catch(err => {\n            void 0;\n        });\n    },200);\n}\n\nfunction workWithSOQL() {\n\n    let userDate = '2015-12-10';\n    if(jQuery('#dateField').val() != '') {\n        userDate = convertDate(jQuery('#dateField').val());\n    }\n\n    const requestPromises = requestSqlData.map(item => {\n        let query = `Select ${item.soqlFields} From ${item.type} where `;\n        query += userDate != '' ? `${filterBy} >= ${userDate} AND `: '';\n        query += ` ${item.soqlWhere} order by ${filterBy} desc`;\n        return sforce.query(query);\n    });\n\n    return Promise.all(requestPromises).then(results => {\n        results.forEach((val, index) => {\n            const records = val.records;\n            if (records && records.length > 0) {\n                let panel;\n                let table;\n\n                table = createTable(requestSqlData[index].fields, requestSqlData[index].table);\n                panel = createPanel(requestSqlData[index].type, table, jQuery('#container-tab'));\n\n                for (let i = 0; i < records.length; i++) {\n                    addRow(records[i], requestSqlData[index].fields, jQuery(table).find('tbody'));\n                }\n                jQuery('#container').append(jQuery(panel));\n\n                jQuery(`#${requestSqlData[index].table}`).DataTable({\n                    order: [[requestSqlData[index].fields.indexOf('LastModifiedDate'), \"desc\"]],\n                    iDisplayLength: 100\n                });\n\n                jQuery(`#${requestSqlData[index].table} tbody`).on('click', 'tr', function () {\n                    jQuery(this).toggleClass('selected');\n                    if (jQuery(this).hasClass('selected')) {\n                        jQuery(this).find('i.fa').removeClass('fa-square-o').addClass('fa-check-square-o');\n                    }\n                    else {\n                        jQuery(this).find('i.fa').removeClass('fa-check-square-o').addClass('fa-square-o');\n                    }\n                });\n            }\n        })\n        return Promise.resolve();\n    }).catch(err => Promise.reject(err));\n}\n\nfunction workWithSessionStorageMetaData() {\n    const fields = [ 'Select','id', 'fullName','fileName','lastModifiedDate','lastModifiedByName',\n        'createdDate','createdByName' ];\n    let userDate = '2015-12-10';\n    if(jQuery('#dateField').val() != '') {\n        userDate = new Date(jQuery('#dateField').val());\n    }\n    requestMetadata.forEach(item => {\n        const val = JSON.parse(sessionStorage.getItem(item.type));\n        if(val && val.length > 0) {\n            let panel;\n            let table;\n\n            table = createTable(fields, item.table);\n\n\n            let hasRecord = false;\n            val.forEach(value => {\n                if (value.manageableState != \"installed\" && (userDate == '' || userDate < new Date(value[filterByMetadata]))) {\n                    addRow(value, fields, jQuery(table).find('tbody'));\n                    hasRecord = true;\n                }\n            });\n\n            if(hasRecord) {\n                panel = createPanel(item.type, table, jQuery('#container-tab2'));\n                jQuery('#container').append(jQuery(panel));\n\n                jQuery(`#${item.table}`).DataTable({\n                    order: [[fields.indexOf('lastModifiedDate'), \"desc\"]],\n                    iDisplayLength: 100\n                });\n\n                jQuery(`#${item.table} tbody`).on('click', 'tr', function () {\n                    jQuery(this).toggleClass('selected');\n                    if (jQuery(this).hasClass('selected')) {\n                        jQuery(this).find('i.fa').removeClass('fa-square-o').addClass('fa-check-square-o');\n                    }\n                    else {\n                        jQuery(this).find('i.fa').removeClass('fa-check-square-o').addClass('fa-square-o');\n                    }\n                });\n            }\n        }\n    });\n\n    return Promise.resolve();\n}\n\nfunction workWithMetaData() {\n    const fields = [ 'Select','id', 'fullName','fileName','lastModifiedDate','lastModifiedByName',\n        'createdDate','createdByName' ];\n    let userDate = '2015-12-10';\n    if(jQuery('#dateField').val() != '') {\n        userDate = new Date(jQuery('#dateField').val());\n    }\n    const requestPromises = requestMetadata.map(item => {\n        const types = [{type: item.type}];\n        return sforce.metadata.list(types, apiVersion);\n    });\n    return Promise.all(requestPromises).then(results => {\n        results.forEach((val, index) => {\n            if(val && val.length > 0) {\n                sessionStorage.setItem(requestMetadata[index].type, JSON.stringify(val));\n                let panel;\n                let table;\n\n                table = createTable(fields, requestMetadata[index].table);\n\n\n                let hasRecord = false;\n                val.forEach(value => {\n                    if (value.manageableState != \"installed\" && (userDate == '' || userDate < new Date(value[filterByMetadata]))) {\n                        addRow(value, fields, jQuery(table).find('tbody'));\n                        hasRecord = true;\n                    }\n                });\n\n                if(hasRecord) {\n                    panel = createPanel(requestMetadata[index].type, table, jQuery('#container-tab2'));\n                    jQuery('#container').append(jQuery(panel));\n\n                    jQuery(`#${requestMetadata[index].table}`).DataTable({\n                        order: [[fields.indexOf('lastModifiedDate'), \"desc\"]],\n                        iDisplayLength: 100\n                    });\n\n                    jQuery(`#${requestMetadata[index].table} tbody`).on('click', 'tr', function () {\n                        jQuery(this).toggleClass('selected');\n                        if (jQuery(this).hasClass('selected')) {\n                            jQuery(this).find('i.fa').removeClass('fa-square-o').addClass('fa-check-square-o');\n                        }\n                        else {\n                            jQuery(this).find('i.fa').removeClass('fa-check-square-o').addClass('fa-square-o');\n                        }\n                    });\n                }\n            } else {\n                sessionStorage.removeItem(requestMetadata[index].type);\n            }\n        });\n        return Promise.resolve();\n    }).catch(err => Promise.reject(err));\n}\n\n\nfunction convertDate(theDate) {\n    if(typeof(theDate) != 'undefined') {\n        const newDate = new Date(theDate);\n        const today = newDate;\n        const year = today.getFullYear();\n        let month = today.getMonth() + 1;\n        let day = today.getDate();\n        if (month < 10)\n            month = `0${month}`;\n        if (day < 10)\n            day = `0${day}`;\n        return `${year}-${month}-${day}T00:00:00Z`;\n    }\n    else {\n        return '';\n    }\n}\n\nfunction showLoading() {\n    if(!jQuery('#status').hasClass('show')) {\n        jQuery('#status').addClass('show');\n        jQuery('#status').show(); // will first fade out the sfdcConsoleloading animation\n        jQuery('#preloader').show(); // will fade out the white DIV that covers the website.\n    }\n}\nfunction hideLoading() {\n    jQuery('#status').removeClass('show');\n    jQuery('#status').hide(); // will first fade out the sfdcConsoleloading animation\n    jQuery('#preloader').hide(); // will fade out the white DIV that covers the website.\n}"]}